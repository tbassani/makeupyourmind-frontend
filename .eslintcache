[{"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\index.js":"1","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\App.js":"2","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\reportWebVitals.js":"3","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\routes\\Routes.js":"4","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\LoginPage.js":"5","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\routes\\AuthRoutes.js":"6","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\services\\auth.js":"7","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\base\\Header.js":"8","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\context\\AppContext.js":"9","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\services\\products.js":"10","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\WelcomePage.js":"11","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\product\\ProductList.js":"12","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\product\\ProductCard.js":"13","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\RegistrationPage.js":"14","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\config\\endpoints.js":"15","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\context\\UserContext.js":"16","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\services\\user.js":"17","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\routes\\PrivateRoutes.js":"18","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\ProfilePage.js":"19","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\services\\app.js":"20","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\common\\DynamicSelect.js":"21"},{"size":697,"mtime":1612446668525,"results":"22","hashOfConfig":"23"},{"size":1116,"mtime":1612530043092,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1612210698121,"results":"25","hashOfConfig":"23"},{"size":980,"mtime":1612529833417,"results":"26","hashOfConfig":"23"},{"size":2016,"mtime":1612439254799,"results":"27","hashOfConfig":"23"},{"size":468,"mtime":1612445232844,"results":"28","hashOfConfig":"23"},{"size":2102,"mtime":1612449312930,"results":"29","hashOfConfig":"23"},{"size":3916,"mtime":1612460638939,"results":"30","hashOfConfig":"23"},{"size":2039,"mtime":1612529083674,"results":"31","hashOfConfig":"23"},{"size":3045,"mtime":1612438313693,"results":"32","hashOfConfig":"23"},{"size":346,"mtime":1612309784914,"results":"33","hashOfConfig":"23"},{"size":831,"mtime":1612439777132,"results":"34","hashOfConfig":"23"},{"size":907,"mtime":1612439778992,"results":"35","hashOfConfig":"23"},{"size":6727,"mtime":1612522328639,"results":"36","hashOfConfig":"23"},{"size":1084,"mtime":1612308282189,"results":"37","hashOfConfig":"23"},{"size":2580,"mtime":1612532136913,"results":"38","hashOfConfig":"23"},{"size":1694,"mtime":1612531865618,"results":"39","hashOfConfig":"23"},{"size":524,"mtime":1612527564242,"results":"40","hashOfConfig":"23"},{"size":5832,"mtime":1612533033716,"results":"41","hashOfConfig":"23"},{"size":1496,"mtime":1612529067917,"results":"42","hashOfConfig":"23"},{"size":1169,"mtime":1612522306930,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"cwkrlr",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\index.js",[],["91","92"],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\App.js",["93"],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\reportWebVitals.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\routes\\Routes.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\LoginPage.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\routes\\AuthRoutes.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\services\\auth.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\base\\Header.js",["94"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport { useUser } from '../../context/UserContext.js';\r\nimport { useApp } from '../../context/AppContext.js';\r\n\r\nimport DynamicSelect from '../common/DynamicSelect.js';\r\n\r\nconst Header = (props) => {\r\n  const { signOut } = useUser();\r\n  const { searchProducts, categories } = useApp();\r\n\r\n  const [maker, setMaker] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [userInput, setUserInput] = useState('');\r\n\r\n  const handleSignOut = () => {\r\n    signOut().then(() => {\r\n      console.log('Signout');\r\n      document.location = '/';\r\n    });\r\n  };\r\n\r\n  const handleCategory = (val) => {\r\n    setCategory(val);\r\n  };\r\n\r\n  const handleMaker = (val) => {\r\n    setTimeout(() => {\r\n      setMaker(val);\r\n    }, 500);\r\n  };\r\n\r\n  const handleUserInput = (val) => {\r\n    setTimeout(() => {\r\n      setUserInput(val);\r\n    }, 500);\r\n  };\r\n\r\n  useEffect(() => {\r\n    searchProducts(category, maker, userInput);\r\n  }, [category, maker, userInput]);\r\n\r\n  return (\r\n    <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\r\n      <Navbar.Brand href=\"/\">Make-up Your Mind</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Form inline>\r\n          <Col>\r\n            {/* <Form.Control\r\n              onChange={(e) => handleCategory(e.target.value)}\r\n              as=\"select\"\r\n              defaultValue=\"Escolha...\"\r\n            >\r\n              <option value=\"\">Escolha...</option>\r\n              <option value=\"1\">Face</option>\r\n              <option value=\"2\">LÃ¡bios</option>\r\n              <option value=\"3\">Olhos</option>\r\n              <option value=\"4\">Sobrancelha</option>\r\n              <option value=\"5\">acessorios</option>\r\n              <option value=\"6\">Kits de maquiagem</option>\r\n              <option value=\"7\">Unhas</option>\r\n              <option value=\"8\">Maquiagem</option>\r\n            </Form.Control> */}\r\n            <DynamicSelect data={categories} handleSelect={handleCategory}></DynamicSelect>\r\n          </Col>\r\n        </Form>\r\n        <Form inline>\r\n          <Col>\r\n            <FormControl\r\n              type=\"text\"\r\n              className=\"mr-sm-2\"\r\n              placeholder=\"Marca\"\r\n              onChange={(e) => handleMaker(e.target.value)}\r\n            />\r\n          </Col>\r\n        </Form>\r\n        <Nav className=\"mr-auto\"></Nav>\r\n        <Form inline>\r\n          <Col>\r\n            <FormControl\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              className=\"mr-sm-2\"\r\n              onChange={(e) => handleUserInput(e.target.value)}\r\n            />\r\n          </Col>\r\n        </Form>\r\n        {props.isSigned ? (\r\n          <div>\r\n            <NavDropdown\r\n              title={<span style={{ color: 'white' }}>UsuÃ¡rio</span>}\r\n              id=\"basic-nav-dropdown\"\r\n            >\r\n              <NavDropdown.Item href=\"/profile\">Perfil</NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item href=\"#\" onClick={handleSignOut}>\r\n                Sair\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n          </div>\r\n        ) : (\r\n          <NavDropdown\r\n            title={<span style={{ color: 'white' }}>UsuÃ¡rio</span>}\r\n            id=\"basic-nav-dropdown\"\r\n          >\r\n            <NavDropdown.Item href=\"/login\">Entrar</NavDropdown.Item>\r\n            <NavDropdown.Divider />\r\n            <NavDropdown.Item href=\"/register\">Registrar</NavDropdown.Item>\r\n          </NavDropdown>\r\n        )}\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\context\\AppContext.js",["95","96","97"],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\services\\products.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\WelcomePage.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\product\\ProductList.js",["98"],"import React, { useEffect } from 'react';\r\n\r\nimport ProductCard from './ProductCard';\r\nimport CardGroup from 'react-bootstrap/CardGroup';\r\n\r\nimport { useApp } from '../../context/AppContext.js';\r\n\r\nconst ProductList = (props) => {\r\n  const { products, getAllProducts, loading, error } = useApp();\r\n\r\n  useEffect(() => {\r\n    getAllProducts();\r\n  }, []);\r\n\r\n  const renderCard = (card, index) => {\r\n    return (\r\n      <ProductCard\r\n        key={card.id}\r\n        img={card.img_src}\r\n        name={card.name}\r\n        maker={card.maker}\r\n        price={card.price}\r\n        img_ref={card.ref}\r\n      />\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n      <CardGroup>{products.map(renderCard)}</CardGroup>\r\n      <div>{loading && 'Loading...'}</div>\r\n      <div>{error && 'Error'}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\product\\ProductCard.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\RegistrationPage.js",["99","100","101"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useUser } from '../context/UserContext.js';\r\nimport DynamicSelect from '../components/common/DynamicSelect.js';\r\nimport { useApp } from '../context/AppContext.js';\r\n\r\nconst RegistrationPage = (props) => {\r\n  const { signUp } = useUser();\r\n  const { skinProfiles, getSkinProfiles } = useApp();\r\n\r\n  const [firstname, setFirstname] = useState('');\r\n  const [lastname, setLastname] = useState('');\r\n  const [email, setEmail] = useState('seu@email.com');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [color, setColor] = useState('');\r\n  const [acne, setAcne] = useState('');\r\n  const [lines, setLines] = useState('');\r\n  const [oiliness, setOiliness] = useState('');\r\n  const [skinTypes, setSkinTypes] = useState({});\r\n\r\n  useEffect(() => {\r\n    console.log(skinProfiles);\r\n    setSkinTypes(skinProfiles);\r\n  }, [skinProfiles]);\r\n\r\n  const onSubmitForm = async (e) => {\r\n    e.preventDefault();\r\n    console.log('Register');\r\n    if (password === confirmPassword) {\r\n      const resp = await signUp({\r\n        first_name: firstname,\r\n        last_name: lastname,\r\n        email,\r\n        password,\r\n        skin_color: color,\r\n        skin_acne: acne,\r\n        skin_oiliness: oiliness,\r\n        skin_lines: lines,\r\n      });\r\n      if (resp.result) {\r\n        props.history.push('/main');\r\n      } else {\r\n        alert(resp.errorMsg);\r\n      }\r\n    } else {\r\n      alert('As senhas nÃ£o correspondem!');\r\n    }\r\n  };\r\n\r\n  const colorHandler = (val) => {\r\n    setColor(val);\r\n  };\r\n  const acneHandler = (val) => {\r\n    setAcne(val);\r\n  };\r\n  const linesHandler = (val) => {\r\n    setLines(val);\r\n  };\r\n  const oilinessHandler = (val) => {\r\n    setOiliness(val);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id=\"container\"\r\n      style={{\r\n        width: '80%',\r\n        display: 'flex',\r\n        justifyContent: 'space-evenly',\r\n        margin: '1rem',\r\n        flexDirection: 'column',\r\n        flex: 0.6,\r\n      }}\r\n    >\r\n      <h2>Registre-se!</h2>\r\n      <Form\r\n        onSubmit={(e) => onSubmitForm(e)}\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          flex: 0.5,\r\n        }}\r\n      >\r\n        <Form.Row>\r\n          <Col>\r\n            <Form.Group controlId=\"formHorizontalEmail\">\r\n              <Col>\r\n                <Row>\r\n                  <Form.Control\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    required\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                  />\r\n                </Row>\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formHorizontalPassword\">\r\n              <Col>\r\n                <Row>\r\n                  <Form.Control\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    required\r\n                    type=\"password\"\r\n                    placeholder=\"Senha\"\r\n                  />\r\n                </Row>\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formHorizontalConfirmPassword\">\r\n              <Col>\r\n                <Row>\r\n                  <Form.Control\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    required\r\n                    type=\"password\"\r\n                    placeholder=\"Confirmar senha\"\r\n                  />\r\n                </Row>\r\n              </Col>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col sm={1}></Col>\r\n          <Col>\r\n            <Form.Group controlId=\"formGridColor\">\r\n              <Col>\r\n                <Row>\r\n                  {skinTypes.skin_color ? (\r\n                    <DynamicSelect\r\n                      aria-required=\"true\"\r\n                      required\r\n                      data={skinTypes.skin_color}\r\n                      default={''}\r\n                      handleSelect={colorHandler}\r\n                    ></DynamicSelect>\r\n                  ) : (\r\n                    <Form.Control></Form.Control>\r\n                  )}\r\n                </Row>\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formGridAcne\">\r\n              <Col>\r\n                <Row>\r\n                  {skinTypes.skin_acne ? (\r\n                    <DynamicSelect\r\n                      aria-required=\"true\"\r\n                      required\r\n                      data={skinTypes.skin_acne}\r\n                      default={''}\r\n                      handleSelect={acneHandler}\r\n                    ></DynamicSelect>\r\n                  ) : (\r\n                    <Form.Control></Form.Control>\r\n                  )}\r\n                </Row>\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formGridLines\">\r\n              <Col>\r\n                <Row>\r\n                  {skinTypes.skin_lines ? (\r\n                    <DynamicSelect\r\n                      aria-required=\"true\"\r\n                      required\r\n                      data={skinTypes.skin_lines}\r\n                      default={''}\r\n                      handleSelect={linesHandler}\r\n                    ></DynamicSelect>\r\n                  ) : (\r\n                    <Form.Control></Form.Control>\r\n                  )}\r\n                </Row>\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formGridOiliness\">\r\n              <Col>\r\n                <Row>\r\n                  {skinTypes.skin_oiliness ? (\r\n                    <DynamicSelect\r\n                      aria-required=\"true\"\r\n                      required\r\n                      data={skinTypes.skin_oiliness}\r\n                      default={''}\r\n                      handleSelect={oilinessHandler}\r\n                    ></DynamicSelect>\r\n                  ) : (\r\n                    <Form.Control></Form.Control>\r\n                  )}\r\n                </Row>\r\n              </Col>\r\n            </Form.Group>\r\n          </Col>\r\n        </Form.Row>\r\n        <Row style={{ display: 'flex', flexDirection: 'row', flex: 0.2, justifyContent: 'center' }}>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Registrar-se\r\n          </Button>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Link to=\"/login\">JÃ¡ Ã© cadastrado?</Link>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationPage;\r\n","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\config\\endpoints.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\context\\UserContext.js",["102"],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\services\\user.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\routes\\PrivateRoutes.js",["103"],"import React, { useState } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ component: Component, isSigned, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (isSigned) {\r\n          return <Component {...props} />;\r\n        } else {\r\n          console.log(isSigned);\r\n          return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />;\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\ProfilePage.js",["104","105"],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\services\\app.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\common\\DynamicSelect.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":20,"column":6,"nodeType":"112","endLine":20,"endColumn":11,"suggestions":"113"},{"ruleId":"110","severity":1,"message":"114","line":48,"column":6,"nodeType":"112","endLine":48,"endColumn":34,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":15,"column":10,"nodeType":"118","messageId":"119","endLine":15,"endColumn":14},{"ruleId":"116","severity":1,"message":"120","line":15,"column":16,"nodeType":"118","messageId":"119","endLine":15,"endColumn":23},{"ruleId":"121","severity":1,"message":"122","line":66,"column":9,"nodeType":"123","messageId":"124","endLine":66,"endColumn":19},{"ruleId":"110","severity":1,"message":"125","line":13,"column":6,"nodeType":"112","endLine":13,"endColumn":8,"suggestions":"126"},{"ruleId":"116","severity":1,"message":"127","line":16,"column":25,"nodeType":"118","messageId":"119","endLine":16,"endColumn":40},{"ruleId":"116","severity":1,"message":"128","line":18,"column":21,"nodeType":"118","messageId":"119","endLine":18,"endColumn":33},{"ruleId":"116","severity":1,"message":"129","line":19,"column":20,"nodeType":"118","messageId":"119","endLine":19,"endColumn":31},{"ruleId":"110","severity":1,"message":"130","line":26,"column":6,"nodeType":"112","endLine":26,"endColumn":8,"suggestions":"131"},{"ruleId":"116","severity":1,"message":"132","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":25},{"ruleId":"110","severity":1,"message":"133","line":34,"column":6,"nodeType":"112","endLine":34,"endColumn":8,"suggestions":"134"},{"ruleId":"116","severity":1,"message":"135","line":41,"column":16,"nodeType":"118","messageId":"119","endLine":41,"endColumn":19},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loading'. Either include it or remove the dependency array.","ArrayExpression",["138"],"React Hook useEffect has a missing dependency: 'searchProducts'. Either include it or remove the dependency array.",["139"],"no-unused-vars","'page' is assigned a value but never used.","Identifier","unusedVar","'setPage' is assigned a value but never used.","no-dupe-keys","Duplicate key 'categories'.","ObjectExpression","unexpected","React Hook useEffect has a missing dependency: 'getAllProducts'. Either include it or remove the dependency array.",["140"],"'getSkinProfiles' is assigned a value but never used.","'setFirstname' is assigned a value but never used.","'setLastname' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'jwt'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setIsSignedIn' needs the current value of 'jwt'.",["141"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'getUserProfile'. Either include it or remove the dependency array.",["142"],"'key' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},"Update the dependencies array to be: [jwt, loading]",{"range":"153","text":"154"},"Update the dependencies array to be: [category, maker, searchProducts, userInput]",{"range":"155","text":"156"},"Update the dependencies array to be: [getAllProducts]",{"range":"157","text":"158"},"Update the dependencies array to be: [jwt]",{"range":"159","text":"160"},"Update the dependencies array to be: [getUserProfile]",{"range":"161","text":"162"},[581,586],"[jwt, loading]",[1268,1296],"[category, maker, searchProducts, userInput]",[349,351],"[getAllProducts]",[858,860],"[jwt]",[1242,1244],"[getUserProfile]"]