[{"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\index.js":"1","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\App.js":"2","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\reportWebVitals.js":"3","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\routes\\Routes.js":"4","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\LoginPage.js":"5","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\routes\\AuthRoutes.js":"6","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\services\\auth.js":"7","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\base\\Header.js":"8","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\context\\AppContext.js":"9","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\WelcomePage.js":"10","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\product\\ProductList.js":"11","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\product\\ProductCard.js":"12","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\RegistrationPage.js":"13","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\config\\endpoints.js":"14","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\context\\UserContext.js":"15","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\services\\user.js":"16","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\routes\\PrivateRoutes.js":"17","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\ProfilePage.js":"18","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\services\\app.js":"19","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\common\\DynamicSelect.js":"20","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\RatingPage.js":"21","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\MainPage.js":"22","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\product\\RateProduct.js":"23","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\services\\rating.js":"24"},{"size":801,"mtime":1612906558244,"results":"25","hashOfConfig":"26"},{"size":1417,"mtime":1612966436582,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1612210698121,"results":"28","hashOfConfig":"26"},{"size":1289,"mtime":1612875310774,"results":"29","hashOfConfig":"26"},{"size":2108,"mtime":1612897705847,"results":"30","hashOfConfig":"26"},{"size":468,"mtime":1612445232844,"results":"31","hashOfConfig":"26"},{"size":2264,"mtime":1612908015447,"results":"32","hashOfConfig":"26"},{"size":3495,"mtime":1613062638441,"results":"33","hashOfConfig":"26"},{"size":5054,"mtime":1612966922424,"results":"34","hashOfConfig":"26"},{"size":362,"mtime":1612956810605,"results":"35","hashOfConfig":"26"},{"size":2544,"mtime":1612957333695,"results":"36","hashOfConfig":"26"},{"size":2566,"mtime":1612893510435,"results":"37","hashOfConfig":"26"},{"size":6722,"mtime":1612806732416,"results":"38","hashOfConfig":"26"},{"size":1084,"mtime":1612308282189,"results":"39","hashOfConfig":"26"},{"size":3630,"mtime":1612966942550,"results":"40","hashOfConfig":"26"},{"size":1758,"mtime":1612959906930,"results":"41","hashOfConfig":"26"},{"size":498,"mtime":1612875346647,"results":"42","hashOfConfig":"26"},{"size":5907,"mtime":1612961533362,"results":"43","hashOfConfig":"26"},{"size":4711,"mtime":1613155888400,"results":"44","hashOfConfig":"26"},{"size":1379,"mtime":1612823320062,"results":"45","hashOfConfig":"26"},{"size":629,"mtime":1612893525925,"results":"46","hashOfConfig":"26"},{"size":396,"mtime":1612877007400,"results":"47","hashOfConfig":"26"},{"size":2246,"mtime":1612961239892,"results":"48","hashOfConfig":"26"},{"size":608,"mtime":1612894262124,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"cwkrlr",{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\index.js",[],["106","107"],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\App.js",["108","109","110"],"import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport Routes from '../src/routes/Routes.js';\r\n\r\nimport Header from '../src/components/base/Header.js';\r\n\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nimport { useUser } from './context/UserContext.js';\r\n\r\nimport { useCookies } from 'react-cookie';\r\n\r\nconst App = () => {\r\n  const [signed, setSigned] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const { jwt, loading, setJWT } = useUser();\r\n  const [cookies, setCookie, removeCookie] = useCookies(['jid']);\r\n  useEffect(() => {\r\n    setSigned(Boolean(jwt && jwt !== null));\r\n  }, [jwt]);\r\n\r\n  useEffect(() => {\r\n    if (cookies.sid) {\r\n      setJWT(cookies.sid);\r\n      setSigned(true);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('Is loading: ' + loading);\r\n    setIsLoading(loading);\r\n  }, [loading]);\r\n\r\n  return (\r\n    <div>\r\n      <Header isSigned={signed} style={{ position: 'sticky' }} />\r\n      {!isLoading ? (\r\n        <div className=\"App\" style={{ justifyContent: 'space-around', display: 'flex', flex: 1 }}>\r\n          <Routes isSigned={signed} />\r\n        </div>\r\n      ) : (\r\n        <div style={{ top: '50%', left: '50%', position: 'absolute' }}>\r\n          <Spinner animation=\"border\" variant=\"primary\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\reportWebVitals.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\routes\\Routes.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\LoginPage.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\routes\\AuthRoutes.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\services\\auth.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\base\\Header.js",["111","112"],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\context\\AppContext.js",["113","114","115"],"import React, { createContext, useState, useEffect, useContext } from 'react';\r\n\r\nimport * as appService from '../services/app.js';\r\n\r\nimport { useUser } from './UserContext.js';\r\n\r\nimport axios from 'axios';\r\n\r\nimport CONFIG from '../config/endpoints.js';\r\n\r\nconst AppContext = createContext({});\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  const { jwt, profile, signOut } = useUser();\r\n\r\n  const [maker, setMaker] = useState('');\r\n  const [makers, setMakers] = useState([]);\r\n  const [category, setCategory] = useState('');\r\n  const [userInput, setUserInput] = useState('');\r\n  const [page, setPage] = useState(1);\r\n  const [products, setProducts] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [skinProfiles, setSkinProfiles] = useState({});\r\n  const [loadingProducts, setLoadingProducts] = useState(true);\r\n  const [hasMore, setHasMore] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const startUp = async () => {\r\n      await getCategories();\r\n      await getMakers();\r\n      await getSkinProfiles();\r\n    };\r\n    startUp();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setProducts([]);\r\n    setPage(1);\r\n  }, [maker, category, userInput, jwt, profile]);\r\n\r\n  useEffect(() => {\r\n    setLoadingProducts(true);\r\n\r\n    let cancel;\r\n    var URL = CONFIG.get_products;\r\n    if (!jwt || jwt === null || jwt === '') {\r\n      console.log('GET ONLY PRODUCTS');\r\n      axios({\r\n        method: 'GET',\r\n        url: URL,\r\n        cancelToken: new axios.CancelToken(function executor(c) {\r\n          cancel = c;\r\n        }),\r\n        params: {\r\n          name: userInput,\r\n          page: page,\r\n          maker: maker === 'Marcas' ? '' : maker,\r\n          category: category === 'Categoria' ? '' : category,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          setProducts((prevProducts) => {\r\n            return [...new Set([...prevProducts, ...res.data])];\r\n          });\r\n          setHasMore(res.data.length > 0);\r\n          setLoadingProducts(false);\r\n          console.log(products);\r\n        })\r\n        .catch((e) => {\r\n          if (axios.isCancel(e)) {\r\n            setLoadingProducts(false);\r\n            return;\r\n          }\r\n        });\r\n      if (cancel !== undefined) {\r\n        return () => cancel();\r\n      }\r\n    } else {\r\n      console.log('GET PRODUCTS AND RATINGS');\r\n      URL = CONFIG.get_products_and_ratings;\r\n      console.log(CONFIG.get_products_and_ratings);\r\n      const headers = {\r\n        Authorization: 'Bearer ' + jwt,\r\n        contenttype: 'application/json;',\r\n        datatype: 'json',\r\n      };\r\n      axios({\r\n        method: 'GET',\r\n        url: URL,\r\n        headers: headers,\r\n        withCredentials: true,\r\n        cancelToken: new axios.CancelToken(function executor(c) {\r\n          cancel = c;\r\n        }),\r\n        params: {\r\n          name: userInput,\r\n          page: page,\r\n          maker: maker === 'Marcas' ? '' : maker,\r\n          category: category === 'Categoria' ? '' : category,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          setProducts((prevProducts) => {\r\n            return [...new Set([...prevProducts, ...res.data])];\r\n          });\r\n          setHasMore(res.data.length > 0);\r\n          setLoadingProducts(false);\r\n          console.log(products);\r\n        })\r\n        .catch((e) => {\r\n          if (axios.isCancel(e)) {\r\n            setLoadingProducts(false);\r\n            return;\r\n          } else {\r\n            signOut();\r\n          }\r\n        });\r\n      if (cancel !== undefined) {\r\n        return () => cancel();\r\n      }\r\n    }\r\n  }, [userInput, page, maker, category, jwt, profile]);\r\n\r\n  // async function searchProducts() {\r\n  //   setLoadingProducts(true);\r\n  //   console.log('Search');\r\n  //   await appService.getProductsService(\r\n  //     category,\r\n  //     maker,\r\n  //     userInput,\r\n  //     page,\r\n  //     setProducts,\r\n  //     jwt,\r\n  //     setHasMore,\r\n  //     products\r\n  //   );\r\n  //   setLoadingProducts(false);\r\n  // }\r\n\r\n  async function getCategories() {\r\n    const response = await appService.getCategoriesService();\r\n    setCategories(response);\r\n  }\r\n\r\n  async function getMakers() {\r\n    await appService.getMakersService(jwt, setMakers);\r\n  }\r\n\r\n  async function getSkinProfiles() {\r\n    const response = await appService.getSkinProfilesService();\r\n    setSkinProfiles(response);\r\n  }\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        maker,\r\n        makers,\r\n        category,\r\n        setLoadingProducts,\r\n        loadingProducts,\r\n        setCategory,\r\n        setUserInput,\r\n        setMaker,\r\n        setPage,\r\n        products,\r\n        userInput,\r\n        categories,\r\n        setCategories,\r\n        skinProfiles,\r\n        setSkinProfiles,\r\n        categories,\r\n        getCategories,\r\n        getSkinProfiles,\r\n        hasMore,\r\n        page,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport function useApp() {\r\n  const context = useContext(AppContext);\r\n  return context;\r\n}\r\n","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\WelcomePage.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\product\\ProductList.js",["116","117","118"],"import React, { useCallback, useRef, useEffect, useState } from 'react';\r\n\r\nimport ProductCard from './ProductCard';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nimport { useApp } from '../../context/AppContext.js';\r\n\r\nconst ProductList = (props) => {\r\n  const { products, loadingProducts, setPage, page, hasMore } = useApp();\r\n\r\n  const observer = useRef();\r\n  const lastProductRef = useCallback(\r\n    (node) => {\r\n      if (loadingProducts) {\r\n        console.log('IS LOADING');\r\n        return;\r\n      }\r\n      if (observer.current) {\r\n        observer.current.disconnect();\r\n      }\r\n      observer.current = new IntersectionObserver((entries) => {\r\n        if (entries[0].isIntersecting) {\r\n          console.log('VISIBLE');\r\n          setPage(page + 1);\r\n        }\r\n      });\r\n      if (node) {\r\n        observer.current.observe(node);\r\n      }\r\n    },\r\n    [page, setPage, hasMore, loadingProducts]\r\n  );\r\n\r\n  const renderCard = (card, index) => {\r\n    if (card.id) {\r\n      if (products.length === index + 1 && hasMore) {\r\n        return (\r\n          <ProductCard\r\n            prodRef={lastProductRef}\r\n            key={card.id}\r\n            img={card.img_src}\r\n            name={card.name}\r\n            maker={card.maker}\r\n            price={card.price}\r\n            img_ref={card.ref}\r\n            isSigned={props.isSigned}\r\n            history={props.history}\r\n            product_id={card.id}\r\n            rating={\r\n              card.ratingAmount && parseInt(card.ratingAmount) !== 0\r\n                ? card.totalRating / parseInt(card.ratingAmount)\r\n                : 0\r\n            }\r\n          />\r\n        );\r\n      } else {\r\n        return (\r\n          <ProductCard\r\n            key={card.id}\r\n            img={card.img_src}\r\n            name={card.name}\r\n            maker={card.maker}\r\n            price={card.price}\r\n            img_ref={card.ref}\r\n            isSigned={props.isSigned}\r\n            history={props.history}\r\n            product_id={card.id}\r\n            rating={\r\n              card.ratingAmount && parseInt(card.ratingAmount) !== 0\r\n                ? card.totalRating / parseInt(card.ratingAmount)\r\n                : 0\r\n            }\r\n          />\r\n        );\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <Col style={{ padding: '7%' }}>\r\n      <Row>{products.map(renderCard)}</Row>\r\n      {loadingProducts ? <Spinner animation=\"border\" variant=\"primary\" /> : <div></div>}\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\product\\ProductCard.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\RegistrationPage.js",["119","120","121","122","123"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useUser } from '../context/UserContext.js';\r\nimport DynamicSelect from '../components/common/DynamicSelect.js';\r\nimport { useApp } from '../context/AppContext.js';\r\n\r\nconst RegistrationPage = (props) => {\r\n  const { signUp } = useUser();\r\n  const { skinProfiles, getSkinProfiles } = useApp();\r\n\r\n  const [firstname, setFirstname] = useState('');\r\n  const [lastname, setLastname] = useState('');\r\n  const [email, setEmail] = useState('seu@email.com');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [color, setColor] = useState('');\r\n  const [acne, setAcne] = useState('');\r\n  const [lines, setLines] = useState('');\r\n  const [oiliness, setOiliness] = useState('');\r\n  const [skinTypes, setSkinTypes] = useState({});\r\n\r\n  useEffect(() => {\r\n    console.log(skinProfiles);\r\n    setSkinTypes(skinProfiles);\r\n  }, [skinProfiles]);\r\n\r\n  const onSubmitForm = async (e) => {\r\n    e.preventDefault();\r\n    console.log('Register');\r\n    if (password === confirmPassword) {\r\n      const resp = await signUp({\r\n        first_name: 'User',\r\n        last_name: 'Name',\r\n        email,\r\n        password,\r\n        skin_color: color,\r\n        skin_acne: acne,\r\n        skin_oiliness: oiliness,\r\n        skin_lines: lines,\r\n      });\r\n      if (resp.result) {\r\n        props.history.push('/main');\r\n      } else {\r\n        alert(resp.errorMsg);\r\n      }\r\n    } else {\r\n      alert('As senhas não correspondem!');\r\n    }\r\n  };\r\n\r\n  const colorHandler = (val) => {\r\n    setColor(val);\r\n  };\r\n  const acneHandler = (val) => {\r\n    setAcne(val);\r\n  };\r\n  const linesHandler = (val) => {\r\n    setLines(val);\r\n  };\r\n  const oilinessHandler = (val) => {\r\n    setOiliness(val);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id=\"container\"\r\n      style={{\r\n        width: '80%',\r\n        display: 'flex',\r\n        justifyContent: 'space-evenly',\r\n        margin: '1rem',\r\n        flexDirection: 'column',\r\n        flex: 0.6,\r\n      }}\r\n    >\r\n      <h2>Registre-se!</h2>\r\n      <Form\r\n        onSubmit={(e) => onSubmitForm(e)}\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          flex: 0.5,\r\n        }}\r\n      >\r\n        <Form.Row>\r\n          <Col>\r\n            <Form.Group controlId=\"formHorizontalEmail\">\r\n              <Col>\r\n                <Row>\r\n                  <Form.Control\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    required\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                  />\r\n                </Row>\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formHorizontalPassword\">\r\n              <Col>\r\n                <Row>\r\n                  <Form.Control\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    required\r\n                    type=\"password\"\r\n                    placeholder=\"Senha\"\r\n                  />\r\n                </Row>\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formHorizontalConfirmPassword\">\r\n              <Col>\r\n                <Row>\r\n                  <Form.Control\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    required\r\n                    type=\"password\"\r\n                    placeholder=\"Confirmar senha\"\r\n                  />\r\n                </Row>\r\n              </Col>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col sm={1}></Col>\r\n          <Col>\r\n            <Form.Group controlId=\"formGridColor\">\r\n              <Col>\r\n                <Row>\r\n                  {skinTypes.skin_color ? (\r\n                    <DynamicSelect\r\n                      aria-required=\"true\"\r\n                      required\r\n                      data={skinTypes.skin_color}\r\n                      default={''}\r\n                      handleSelect={colorHandler}\r\n                    ></DynamicSelect>\r\n                  ) : (\r\n                    <Form.Control></Form.Control>\r\n                  )}\r\n                </Row>\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formGridAcne\">\r\n              <Col>\r\n                <Row>\r\n                  {skinTypes.skin_acne ? (\r\n                    <DynamicSelect\r\n                      aria-required=\"true\"\r\n                      required\r\n                      data={skinTypes.skin_acne}\r\n                      default={''}\r\n                      handleSelect={acneHandler}\r\n                    ></DynamicSelect>\r\n                  ) : (\r\n                    <Form.Control></Form.Control>\r\n                  )}\r\n                </Row>\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formGridLines\">\r\n              <Col>\r\n                <Row>\r\n                  {skinTypes.skin_lines ? (\r\n                    <DynamicSelect\r\n                      aria-required=\"true\"\r\n                      required\r\n                      data={skinTypes.skin_lines}\r\n                      default={''}\r\n                      handleSelect={linesHandler}\r\n                    ></DynamicSelect>\r\n                  ) : (\r\n                    <Form.Control></Form.Control>\r\n                  )}\r\n                </Row>\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formGridOiliness\">\r\n              <Col>\r\n                <Row>\r\n                  {skinTypes.skin_oiliness ? (\r\n                    <DynamicSelect\r\n                      aria-required=\"true\"\r\n                      required\r\n                      data={skinTypes.skin_oiliness}\r\n                      default={''}\r\n                      handleSelect={oilinessHandler}\r\n                    ></DynamicSelect>\r\n                  ) : (\r\n                    <Form.Control></Form.Control>\r\n                  )}\r\n                </Row>\r\n              </Col>\r\n            </Form.Group>\r\n          </Col>\r\n        </Form.Row>\r\n        <Row style={{ display: 'flex', flexDirection: 'row', flex: 0.2, justifyContent: 'center' }}>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Registrar-se\r\n          </Button>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Link to=\"/login\">Já é cadastrado?</Link>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationPage;\r\n","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\config\\endpoints.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\context\\UserContext.js",["124"],"import React, { createContext, useState, useEffect, useContext } from 'react';\r\n\r\nimport { useCookies } from 'react-cookie';\r\n\r\nimport * as authService from '../services/auth.js';\r\nimport * as userService from '../services/user.js';\r\n\r\nconst UserContext = createContext({});\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [email, setEmail] = useState('');\r\n  const [jwt, setJWT] = useState('');\r\n  const [isSignedIn, setIsSignedIn] = useState(false);\r\n  const [profile, setProfile] = useState(null);\r\n\r\n  const [cookies, setCookie, removeCookie] = useCookies(['sid']);\r\n\r\n  useEffect(() => {\r\n    console.log('Check signIn from context');\r\n    if (jwt && jwt !== '') {\r\n      console.log('JWT existe');\r\n    } else if (cookies.sid) {\r\n      console.log('Cookie existe');\r\n      setJWT(cookies.sid);\r\n    }\r\n    setLoading(false);\r\n    setIsSignedIn(Boolean(jwt && jwt !== ''));\r\n  }, [cookies]);\r\n\r\n  useEffect(() => {\r\n    setIsSignedIn(Boolean(jwt));\r\n  }, [jwt]);\r\n\r\n  async function signIn(email, password) {\r\n    console.log('Sign In from Context');\r\n    setLoading(true);\r\n    const response = await authService.signInService(email, password);\r\n\r\n    if (!response.errorMsg) {\r\n      setCookie('sid', response.jwt, {\r\n        path: '/',\r\n        expires: new Date(Date.now() + 86400000),\r\n      });\r\n      setUser(response.user);\r\n      setJWT(response.jwt);\r\n    } else {\r\n      signOut();\r\n    }\r\n    setLoading(false);\r\n    return response;\r\n  }\r\n\r\n  async function signOut() {\r\n    console.log('Sign Out from Context');\r\n    setLoading(true);\r\n    setJWT(null);\r\n    setCookie('sid', '', {\r\n      path: '/',\r\n      expires: new Date(Date.now() + 86400000),\r\n    });\r\n    removeCookie('sid', { path: '/', domain: '*.herokuapp.com' });\r\n    removeCookie('sid', { path: '/', domain: '.herokuapp.com' });\r\n    removeCookie('sid', { path: '/', domain: '.makeup-yourmind.herokuapp.com' });\r\n    removeCookie('sid', { path: '/', domain: '*makeup-yourmind.herokuapp.com' });\r\n    //await authService.signOutService(jwt);\r\n    setLoading(false);\r\n  }\r\n\r\n  async function signUp(userData) {\r\n    setLoading(true);\r\n    const resp = await userService.registerUserService(userData, setJWT);\r\n    if (!resp.errorMsg) {\r\n      //SetCookie\r\n      setCookie('sid', resp.jwt, {\r\n        path: '/',\r\n        expires: new Date(Date.now() + 86400000),\r\n      });\r\n    }\r\n    setLoading(false);\r\n    return resp;\r\n  }\r\n\r\n  async function forgotPassword(email) {\r\n    console.log('Forgot password: ' + email);\r\n  }\r\n\r\n  async function getUserProfile() {\r\n    console.log('GET USER PROFILE');\r\n    const resp = await userService.getUserProfileService(jwt);\r\n    setProfile(resp);\r\n  }\r\n\r\n  async function setUserProfile(profile) {\r\n    setLoading(true);\r\n    const resp = await userService.setUserProfileService(jwt, profile);\r\n    setProfile(resp);\r\n    setLoading(false);\r\n    return resp;\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        user,\r\n        loading,\r\n        email,\r\n        isSignedIn,\r\n        setLoading,\r\n        signIn,\r\n        signOut,\r\n        signUp,\r\n        forgotPassword,\r\n        setUser,\r\n        setEmail,\r\n        jwt,\r\n        setJWT,\r\n        getUserProfile,\r\n        setUserProfile,\r\n        profile,\r\n        cookies,\r\n      }}\r\n    >\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport function useUser() {\r\n  const context = useContext(UserContext);\r\n  return context;\r\n}\r\n//import {useAuth} from '../../../contexts/auth';\r\n// const {signOut, user} = useAuth();\r\n","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\services\\user.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\routes\\PrivateRoutes.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\ProfilePage.js",["125","126"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nimport DynamicSelect from '../components/common/DynamicSelect.js';\r\nimport { useApp } from '../context/AppContext.js';\r\nimport { useUser } from '../context/UserContext.js';\r\n\r\nconst ProfilePage = (props) => {\r\n  const { skinProfiles } = useApp();\r\n  const { getUserProfile, profile, setUserProfile } = useUser();\r\n\r\n  const [initialColor, setInitialColor] = useState('');\r\n  const [initialAcne, setInitialAcne] = useState('');\r\n  const [initiaLines, setInitialLines] = useState('');\r\n  const [initialOiliness, setInitialOiliness] = useState('');\r\n  const [color, setColor] = useState('');\r\n  const [acne, setAcne] = useState('');\r\n  const [lines, setLines] = useState('');\r\n  const [oiliness, setOiliness] = useState('');\r\n  const [skinTypes, setSkinTypes] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const setTypes = async () => {\r\n      await getUserProfile();\r\n      setLoading(false);\r\n    };\r\n    setTypes();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSkinTypes(skinProfiles);\r\n  }, [skinProfiles]);\r\n\r\n  useEffect(() => {\r\n    for (const key in profile) {\r\n      setInitialColor(profile.skin_color_id);\r\n      setInitialOiliness(profile.skin_oiliness_id);\r\n      setInitialLines(profile.skin_lines_id);\r\n      setInitialAcne(profile.skin_acne_id);\r\n      setColor(profile.skin_color_id);\r\n      setOiliness(profile.skin_oiliness_id);\r\n      setLines(profile.skin_lines_id);\r\n      setAcne(profile.skin_acne_id);\r\n    }\r\n  }, [profile]);\r\n\r\n  const onSubmitForm = async (e) => {\r\n    e.preventDefault();\r\n    const resp = await setUserProfile({\r\n      skin_color: color,\r\n      skin_acne: acne,\r\n      skin_oiliness: oiliness,\r\n      skin_lines: lines,\r\n    });\r\n    if (resp) {\r\n      props.history.push('/');\r\n    }\r\n  };\r\n\r\n  const colorHandler = (val) => {\r\n    setColor(val);\r\n  };\r\n  const acneHandler = (val) => {\r\n    setAcne(val);\r\n  };\r\n  const linesHandler = (val) => {\r\n    setLines(val);\r\n  };\r\n  const oilinessHandler = (val) => {\r\n    setOiliness(val);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id=\"container\"\r\n      style={{\r\n        width: '80%',\r\n        display: 'flex',\r\n        justifyContent: 'space-evenly',\r\n        margin: '1rem',\r\n        flexDirection: 'column',\r\n        flex: 0.6,\r\n      }}\r\n    >\r\n      <h2>Atualizar perfil de pele</h2>\r\n      <Form\r\n        onSubmit={(e) => onSubmitForm(e)}\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          flex: 0.5,\r\n        }}\r\n      >\r\n        <Form.Row>\r\n          <Col>\r\n            <Form.Label>Cor da Pele</Form.Label>\r\n            <Form.Group controlId=\"formGridColor\">\r\n              <Col>\r\n                <Row>\r\n                  {skinTypes.skin_color ? (\r\n                    <DynamicSelect\r\n                      aria-required=\"true\"\r\n                      required\r\n                      data={skinTypes.skin_color}\r\n                      default={initialColor}\r\n                      handleSelect={colorHandler}\r\n                    ></DynamicSelect>\r\n                  ) : (\r\n                    <Form.Control></Form.Control>\r\n                  )}\r\n                </Row>\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Label>Acne</Form.Label>\r\n            <Form.Group controlId=\"formGridAcne\">\r\n              <Col>\r\n                <Row>\r\n                  {skinTypes.skin_acne ? (\r\n                    <DynamicSelect\r\n                      aria-required=\"true\"\r\n                      required\r\n                      data={skinTypes.skin_acne}\r\n                      default={initialAcne}\r\n                      handleSelect={acneHandler}\r\n                    ></DynamicSelect>\r\n                  ) : (\r\n                    <Form.Control></Form.Control>\r\n                  )}\r\n                </Row>\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Label>Linhas da pele</Form.Label>\r\n            <Form.Group controlId=\"formGridLines\">\r\n              <Col>\r\n                <Row>\r\n                  {skinTypes.skin_lines ? (\r\n                    <DynamicSelect\r\n                      aria-required=\"true\"\r\n                      required\r\n                      data={skinTypes.skin_lines}\r\n                      default={initiaLines}\r\n                      handleSelect={linesHandler}\r\n                    ></DynamicSelect>\r\n                  ) : (\r\n                    <Form.Control></Form.Control>\r\n                  )}\r\n                </Row>\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Label>Oleosidade</Form.Label>\r\n            <Form.Group controlId=\"formGridOiliness\">\r\n              <Col>\r\n                <Row>\r\n                  {skinTypes.skin_oiliness ? (\r\n                    <DynamicSelect\r\n                      aria-required=\"true\"\r\n                      required\r\n                      data={skinTypes.skin_oiliness}\r\n                      default={initialOiliness}\r\n                      handleSelect={oilinessHandler}\r\n                    ></DynamicSelect>\r\n                  ) : (\r\n                    <Form.Control></Form.Control>\r\n                  )}\r\n                </Row>\r\n              </Col>\r\n            </Form.Group>\r\n          </Col>\r\n        </Form.Row>\r\n        <Row style={{ display: 'flex', flexDirection: 'row', flex: 0.2, justifyContent: 'center' }}>\r\n          {loading ? (\r\n            <Spinner animation=\"border\" variant=\"primary\" />\r\n          ) : (\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Atualizar Perfil\r\n            </Button>\r\n          )}\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\services\\app.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\common\\DynamicSelect.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\RatingPage.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\MainPage.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\product\\RateProduct.js",["127"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport ReactStars from 'react-rating-stars-component';\r\n\r\nimport * as ratingService from '../../services/rating.js';\r\nimport { useUser } from '../../context/UserContext.js';\r\n\r\nconst RateProduct = (props) => {\r\n  const [rating, setRating] = useState(5);\r\n\r\n  const { jwt } = useUser();\r\n\r\n  useEffect(() => {\r\n    if (!props.product_id) {\r\n      document.location = '/';\r\n    }\r\n  }, []);\r\n\r\n  const rateProduct = () => {\r\n    console.log(rating);\r\n    ratingService.evalProductService(jwt, parseInt(props.product_id), rating);\r\n    document.location = '/';\r\n  };\r\n\r\n  const ratingChanged = (newRating) => {\r\n    setRating(newRating);\r\n  };\r\n  if (props.product_id) {\r\n    return (\r\n      <Card\r\n        style={{\r\n          width: '18rem',\r\n          margin: '0.2rem',\r\n          border: 'solid 1px #CCC',\r\n        }}\r\n        ref={props.prodRef}\r\n      >\r\n        <a href={props.img_ref} target=\"_blank\" rel=\"noreferrer\">\r\n          <Card.Img variant=\"top\" src={props.img} />\r\n        </a>\r\n        <Card.Body\r\n          style={{ display: 'flex', flex: 1, flexDirection: 'column', justifyContent: 'flex-end' }}\r\n        >\r\n          <Card.Title>{props.name}</Card.Title>\r\n          <Card.Text>\r\n            <span>\r\n              <strong>{props.maker}</strong>\r\n            </span>\r\n            <br />\r\n            <span>R${props.price}</span>\r\n          </Card.Text>\r\n          <Col\r\n            style={{\r\n              diplay: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              alignContent: 'center',\r\n            }}\r\n          >\r\n            <ReactStars\r\n              count={5}\r\n              onChange={ratingChanged}\r\n              size={51.5}\r\n              isHalf={true}\r\n              activeColor=\"#ffd700\"\r\n              value={rating}\r\n            />\r\n            <Button variant=\"primary\" onClick={rateProduct}>\r\n              Avaliar\r\n            </Button>\r\n          </Col>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n};\r\n\r\nexport default RateProduct;\r\n","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\services\\rating.js",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":19,"column":19,"nodeType":"134","messageId":"135","endLine":19,"endColumn":28},{"ruleId":"132","severity":1,"message":"136","line":19,"column":30,"nodeType":"134","messageId":"135","endLine":19,"endColumn":42},{"ruleId":"137","severity":1,"message":"138","line":29,"column":6,"nodeType":"139","endLine":29,"endColumn":8,"suggestions":"140"},{"ruleId":"132","severity":1,"message":"141","line":20,"column":10,"nodeType":"134","messageId":"135","endLine":20,"endColumn":17},{"ruleId":"132","severity":1,"message":"133","line":20,"column":19,"nodeType":"134","messageId":"135","endLine":20,"endColumn":28},{"ruleId":"137","severity":1,"message":"142","line":34,"column":6,"nodeType":"139","endLine":34,"endColumn":8,"suggestions":"143"},{"ruleId":"137","severity":1,"message":"144","line":124,"column":6,"nodeType":"139","endLine":124,"endColumn":54,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":174,"column":9,"nodeType":"148","messageId":"149","endLine":174,"endColumn":19},{"ruleId":"132","severity":1,"message":"150","line":1,"column":38,"nodeType":"134","messageId":"135","endLine":1,"endColumn":47},{"ruleId":"132","severity":1,"message":"151","line":1,"column":49,"nodeType":"134","messageId":"135","endLine":1,"endColumn":57},{"ruleId":"137","severity":1,"message":"152","line":33,"column":5,"nodeType":"139","endLine":33,"endColumn":46,"suggestions":"153"},{"ruleId":"132","severity":1,"message":"154","line":16,"column":25,"nodeType":"134","messageId":"135","endLine":16,"endColumn":40},{"ruleId":"132","severity":1,"message":"155","line":18,"column":10,"nodeType":"134","messageId":"135","endLine":18,"endColumn":19},{"ruleId":"132","severity":1,"message":"156","line":18,"column":21,"nodeType":"134","messageId":"135","endLine":18,"endColumn":33},{"ruleId":"132","severity":1,"message":"157","line":19,"column":10,"nodeType":"134","messageId":"135","endLine":19,"endColumn":18},{"ruleId":"132","severity":1,"message":"158","line":19,"column":20,"nodeType":"134","messageId":"135","endLine":19,"endColumn":31},{"ruleId":"137","severity":1,"message":"159","line":30,"column":6,"nodeType":"139","endLine":30,"endColumn":15,"suggestions":"160"},{"ruleId":"137","severity":1,"message":"161","line":34,"column":6,"nodeType":"139","endLine":34,"endColumn":8,"suggestions":"162"},{"ruleId":"132","severity":1,"message":"163","line":41,"column":16,"nodeType":"134","messageId":"135","endLine":41,"endColumn":19},{"ruleId":"137","severity":1,"message":"164","line":21,"column":6,"nodeType":"139","endLine":21,"endColumn":8,"suggestions":"165"},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"no-unused-vars","'setCookie' is assigned a value but never used.","Identifier","unusedVar","'removeCookie' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cookies.sid' and 'setJWT'. Either include them or remove the dependency array.","ArrayExpression",["168"],"'cookies' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getMakers'. Either include it or remove the dependency array.",["169"],"React Hook useEffect has missing dependencies: 'products' and 'signOut'. Either include them or remove the dependency array.",["170"],"no-dupe-keys","Duplicate key 'categories'.","ObjectExpression","unexpected","'useEffect' is defined but never used.","'useState' is defined but never used.","React Hook useCallback has an unnecessary dependency: 'hasMore'. Either exclude it or remove the dependency array.",["171"],"'getSkinProfiles' is assigned a value but never used.","'firstname' is assigned a value but never used.","'setFirstname' is assigned a value but never used.","'lastname' is assigned a value but never used.","'setLastname' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'jwt'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setIsSignedIn' needs the current value of 'jwt'.",["172"],"React Hook useEffect has a missing dependency: 'getUserProfile'. Either include it or remove the dependency array.",["173"],"'key' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.product_id'. Either include it or remove the dependency array.",["174"],"no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},"Update the dependencies array to be: [cookies.sid, setJWT]",{"range":"189","text":"190"},"Update the dependencies array to be: [getMakers]",{"range":"191","text":"192"},"Update the dependencies array to be: [userInput, page, maker, category, jwt, profile, products, signOut]",{"range":"193","text":"194"},"Update the dependencies array to be: [page, setPage, loadingProducts]",{"range":"195","text":"196"},"Update the dependencies array to be: [cookies, jwt]",{"range":"197","text":"198"},"Update the dependencies array to be: [getUserProfile]",{"range":"199","text":"200"},"Update the dependencies array to be: [props.product_id]",{"range":"201","text":"202"},[810,812],"[cookies.sid, setJWT]",[1076,1078],"[getMakers]",[3620,3668],"[userInput, page, maker, category, jwt, profile, products, signOut]",[950,991],"[page, setPage, loadingProducts]",[989,998],"[cookies, jwt]",[1242,1244],"[getUserProfile]",[569,571],"[props.product_id]"]