[{"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\index.js":"1","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\App.js":"2","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\reportWebVitals.js":"3","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\routes\\Routes.js":"4","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\LoginPage.js":"5","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\routes\\AuthRoutes.js":"6","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\services\\auth.js":"7","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\base\\Header.js":"8","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\context\\AppContext.js":"9","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\WelcomePage.js":"10","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\product\\ProductList.js":"11","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\product\\ProductCard.js":"12","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\RegistrationPage.js":"13","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\config\\endpoints.js":"14","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\context\\UserContext.js":"15","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\services\\user.js":"16","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\routes\\PrivateRoutes.js":"17","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\ProfilePage.js":"18","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\services\\app.js":"19","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\common\\DynamicSelect.js":"20","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\RatingPage.js":"21","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\MainPage.js":"22","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\product\\RateProduct.js":"23","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\services\\rating.js":"24"},{"size":801,"mtime":1612906558244,"results":"25","hashOfConfig":"26"},{"size":1440,"mtime":1612955026069,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1612210698121,"results":"28","hashOfConfig":"26"},{"size":1289,"mtime":1612875310774,"results":"29","hashOfConfig":"26"},{"size":2108,"mtime":1612897705847,"results":"30","hashOfConfig":"26"},{"size":468,"mtime":1612445232844,"results":"31","hashOfConfig":"26"},{"size":2264,"mtime":1612908015447,"results":"32","hashOfConfig":"26"},{"size":3482,"mtime":1612914241210,"results":"33","hashOfConfig":"26"},{"size":5010,"mtime":1612955323559,"results":"34","hashOfConfig":"26"},{"size":362,"mtime":1612956810605,"results":"35","hashOfConfig":"26"},{"size":2544,"mtime":1612957333695,"results":"36","hashOfConfig":"26"},{"size":2566,"mtime":1612893510435,"results":"37","hashOfConfig":"26"},{"size":6722,"mtime":1612806732416,"results":"38","hashOfConfig":"26"},{"size":1084,"mtime":1612308282189,"results":"39","hashOfConfig":"26"},{"size":3642,"mtime":1612959986572,"results":"40","hashOfConfig":"26"},{"size":1758,"mtime":1612959906930,"results":"41","hashOfConfig":"26"},{"size":498,"mtime":1612875346647,"results":"42","hashOfConfig":"26"},{"size":5907,"mtime":1612533130640,"results":"43","hashOfConfig":"26"},{"size":4472,"mtime":1612899256133,"results":"44","hashOfConfig":"26"},{"size":1379,"mtime":1612823320062,"results":"45","hashOfConfig":"26"},{"size":629,"mtime":1612893525925,"results":"46","hashOfConfig":"26"},{"size":396,"mtime":1612877007400,"results":"47","hashOfConfig":"26"},{"size":2216,"mtime":1612894740895,"results":"48","hashOfConfig":"26"},{"size":608,"mtime":1612894262124,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cwkrlr",{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\index.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\App.js",["103","104","105"],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\reportWebVitals.js",[],["106","107"],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\routes\\Routes.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\LoginPage.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\routes\\AuthRoutes.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\services\\auth.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\base\\Header.js",["108","109"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport { useUser } from '../../context/UserContext.js';\r\nimport { useApp } from '../../context/AppContext.js';\r\nimport { useCookies } from 'react-cookie';\r\n\r\nimport DynamicSelect from '../common/DynamicSelect.js';\r\n\r\nconst Header = (props) => {\r\n  const { signOut, setJWT } = useUser();\r\n  const { categories, setMaker, setUserInput, setCategory, makers } = useApp();\r\n\r\n  const [cookies, setCookie, removeCookie] = useCookies(['jid']);\r\n\r\n  const [makerData, setMakerData] = useState([]);\r\n\r\n  const handleSignOut = () => {\r\n    signOut();\r\n    setJWT(null);\r\n    removeCookie('sid', { path: '/', domain: '*.herokuapp.com' });\r\n    removeCookie('sid', { path: '/', domain: '.herokuapp.com' });\r\n    removeCookie('sid', { path: '/', domain: '.makeup-yourmind.herokuapp.com' });\r\n    document.location = '/';\r\n  };\r\n\r\n  const handleCategory = (val) => {\r\n    setCategory(val);\r\n  };\r\n\r\n  const handleMaker = (val) => {\r\n    setTimeout(() => {\r\n      setMaker(val);\r\n    }, 600);\r\n  };\r\n\r\n  const handleUserInput = (val) => {\r\n    setTimeout(() => {\r\n      setUserInput(val);\r\n    }, 600);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setMakerData(makers);\r\n  }, [makers]);\r\n\r\n  return (\r\n    <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\r\n      <Navbar.Brand href=\"/\">Make-up Your Mind</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Form inline>\r\n          <Col>\r\n            <DynamicSelect\r\n              useDescVal={true}\r\n              data={categories}\r\n              handleSelect={handleCategory}\r\n            ></DynamicSelect>\r\n          </Col>\r\n        </Form>\r\n        <Form inline>\r\n          <Col>\r\n            <DynamicSelect\r\n              useDescVal={true}\r\n              data={makerData}\r\n              handleSelect={handleMaker}\r\n            ></DynamicSelect>\r\n          </Col>\r\n        </Form>\r\n        <Nav className=\"mr-auto\"></Nav>\r\n        <Form inline>\r\n          <Col>\r\n            <FormControl\r\n              type=\"text\"\r\n              placeholder=\"Busca\"\r\n              className=\"mr-sm-2\"\r\n              onChange={(e) => handleUserInput(e.target.value)}\r\n            />\r\n          </Col>\r\n        </Form>\r\n        {props.isSigned ? (\r\n          <div>\r\n            <NavDropdown\r\n              title={<span style={{ color: 'white' }}>Usuário</span>}\r\n              id=\"basic-nav-dropdown\"\r\n            >\r\n              <NavDropdown.Item href=\"/profile\">Perfil</NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item href=\"#\" onClick={handleSignOut}>\r\n                Sair\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n          </div>\r\n        ) : (\r\n          <NavDropdown\r\n            title={<span style={{ color: 'white' }}>Usuário</span>}\r\n            id=\"basic-nav-dropdown\"\r\n          >\r\n            <NavDropdown.Item href=\"/login\">Entrar</NavDropdown.Item>\r\n            <NavDropdown.Divider />\r\n            <NavDropdown.Item href=\"/register\">Registrar</NavDropdown.Item>\r\n          </NavDropdown>\r\n        )}\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\context\\AppContext.js",["110","111","112"],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\WelcomePage.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\product\\ProductList.js",["113","114","115"],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\product\\ProductCard.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\RegistrationPage.js",["116","117","118","119","120"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useUser } from '../context/UserContext.js';\r\nimport DynamicSelect from '../components/common/DynamicSelect.js';\r\nimport { useApp } from '../context/AppContext.js';\r\n\r\nconst RegistrationPage = (props) => {\r\n  const { signUp } = useUser();\r\n  const { skinProfiles, getSkinProfiles } = useApp();\r\n\r\n  const [firstname, setFirstname] = useState('');\r\n  const [lastname, setLastname] = useState('');\r\n  const [email, setEmail] = useState('seu@email.com');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [color, setColor] = useState('');\r\n  const [acne, setAcne] = useState('');\r\n  const [lines, setLines] = useState('');\r\n  const [oiliness, setOiliness] = useState('');\r\n  const [skinTypes, setSkinTypes] = useState({});\r\n\r\n  useEffect(() => {\r\n    console.log(skinProfiles);\r\n    setSkinTypes(skinProfiles);\r\n  }, [skinProfiles]);\r\n\r\n  const onSubmitForm = async (e) => {\r\n    e.preventDefault();\r\n    console.log('Register');\r\n    if (password === confirmPassword) {\r\n      const resp = await signUp({\r\n        first_name: 'User',\r\n        last_name: 'Name',\r\n        email,\r\n        password,\r\n        skin_color: color,\r\n        skin_acne: acne,\r\n        skin_oiliness: oiliness,\r\n        skin_lines: lines,\r\n      });\r\n      if (resp.result) {\r\n        props.history.push('/main');\r\n      } else {\r\n        alert(resp.errorMsg);\r\n      }\r\n    } else {\r\n      alert('As senhas não correspondem!');\r\n    }\r\n  };\r\n\r\n  const colorHandler = (val) => {\r\n    setColor(val);\r\n  };\r\n  const acneHandler = (val) => {\r\n    setAcne(val);\r\n  };\r\n  const linesHandler = (val) => {\r\n    setLines(val);\r\n  };\r\n  const oilinessHandler = (val) => {\r\n    setOiliness(val);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id=\"container\"\r\n      style={{\r\n        width: '80%',\r\n        display: 'flex',\r\n        justifyContent: 'space-evenly',\r\n        margin: '1rem',\r\n        flexDirection: 'column',\r\n        flex: 0.6,\r\n      }}\r\n    >\r\n      <h2>Registre-se!</h2>\r\n      <Form\r\n        onSubmit={(e) => onSubmitForm(e)}\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          flex: 0.5,\r\n        }}\r\n      >\r\n        <Form.Row>\r\n          <Col>\r\n            <Form.Group controlId=\"formHorizontalEmail\">\r\n              <Col>\r\n                <Row>\r\n                  <Form.Control\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    required\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                  />\r\n                </Row>\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formHorizontalPassword\">\r\n              <Col>\r\n                <Row>\r\n                  <Form.Control\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    required\r\n                    type=\"password\"\r\n                    placeholder=\"Senha\"\r\n                  />\r\n                </Row>\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formHorizontalConfirmPassword\">\r\n              <Col>\r\n                <Row>\r\n                  <Form.Control\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    required\r\n                    type=\"password\"\r\n                    placeholder=\"Confirmar senha\"\r\n                  />\r\n                </Row>\r\n              </Col>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col sm={1}></Col>\r\n          <Col>\r\n            <Form.Group controlId=\"formGridColor\">\r\n              <Col>\r\n                <Row>\r\n                  {skinTypes.skin_color ? (\r\n                    <DynamicSelect\r\n                      aria-required=\"true\"\r\n                      required\r\n                      data={skinTypes.skin_color}\r\n                      default={''}\r\n                      handleSelect={colorHandler}\r\n                    ></DynamicSelect>\r\n                  ) : (\r\n                    <Form.Control></Form.Control>\r\n                  )}\r\n                </Row>\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formGridAcne\">\r\n              <Col>\r\n                <Row>\r\n                  {skinTypes.skin_acne ? (\r\n                    <DynamicSelect\r\n                      aria-required=\"true\"\r\n                      required\r\n                      data={skinTypes.skin_acne}\r\n                      default={''}\r\n                      handleSelect={acneHandler}\r\n                    ></DynamicSelect>\r\n                  ) : (\r\n                    <Form.Control></Form.Control>\r\n                  )}\r\n                </Row>\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formGridLines\">\r\n              <Col>\r\n                <Row>\r\n                  {skinTypes.skin_lines ? (\r\n                    <DynamicSelect\r\n                      aria-required=\"true\"\r\n                      required\r\n                      data={skinTypes.skin_lines}\r\n                      default={''}\r\n                      handleSelect={linesHandler}\r\n                    ></DynamicSelect>\r\n                  ) : (\r\n                    <Form.Control></Form.Control>\r\n                  )}\r\n                </Row>\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formGridOiliness\">\r\n              <Col>\r\n                <Row>\r\n                  {skinTypes.skin_oiliness ? (\r\n                    <DynamicSelect\r\n                      aria-required=\"true\"\r\n                      required\r\n                      data={skinTypes.skin_oiliness}\r\n                      default={''}\r\n                      handleSelect={oilinessHandler}\r\n                    ></DynamicSelect>\r\n                  ) : (\r\n                    <Form.Control></Form.Control>\r\n                  )}\r\n                </Row>\r\n              </Col>\r\n            </Form.Group>\r\n          </Col>\r\n        </Form.Row>\r\n        <Row style={{ display: 'flex', flexDirection: 'row', flex: 0.2, justifyContent: 'center' }}>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Registrar-se\r\n          </Button>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Link to=\"/login\">Já é cadastrado?</Link>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationPage;\r\n","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\config\\endpoints.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\context\\UserContext.js",["121"],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\services\\user.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\routes\\PrivateRoutes.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\ProfilePage.js",["122","123"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nimport DynamicSelect from '../components/common/DynamicSelect.js';\r\nimport { useApp } from '../context/AppContext.js';\r\nimport { useUser } from '../context/UserContext.js';\r\n\r\nconst ProfilePage = (props) => {\r\n  const { skinProfiles } = useApp();\r\n  const { getUserProfile, profile, setUserProfile } = useUser();\r\n\r\n  const [initialColor, setInitialColor] = useState('');\r\n  const [initialAcne, setInitialAcne] = useState('');\r\n  const [initiaLines, setInitialLines] = useState('');\r\n  const [initialOiliness, setInitialOiliness] = useState('');\r\n  const [color, setColor] = useState('');\r\n  const [acne, setAcne] = useState('');\r\n  const [lines, setLines] = useState('');\r\n  const [oiliness, setOiliness] = useState('');\r\n  const [skinTypes, setSkinTypes] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const setTypes = async () => {\r\n      await getUserProfile();\r\n      setLoading(false);\r\n    };\r\n    setTypes();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSkinTypes(skinProfiles);\r\n  }, [skinProfiles]);\r\n\r\n  useEffect(() => {\r\n    for (const key in profile) {\r\n      setInitialColor(profile.skin_color_id);\r\n      setInitialOiliness(profile.skin_oiliness_id);\r\n      setInitialLines(profile.skin_lines_id);\r\n      setInitialAcne(profile.skin_acne_id);\r\n      setColor(profile.skin_color_id);\r\n      setOiliness(profile.skin_oiliness_id);\r\n      setLines(profile.skin_lines_id);\r\n      setAcne(profile.skin_acne_id);\r\n    }\r\n  }, [profile]);\r\n\r\n  const onSubmitForm = async (e) => {\r\n    e.preventDefault();\r\n    const resp = await setUserProfile({\r\n      skin_color: color,\r\n      skin_acne: acne,\r\n      skin_oiliness: oiliness,\r\n      skin_lines: lines,\r\n    });\r\n    if (resp) {\r\n      props.history.push('/');\r\n    }\r\n  };\r\n\r\n  const colorHandler = (val) => {\r\n    setColor(val);\r\n  };\r\n  const acneHandler = (val) => {\r\n    setAcne(val);\r\n  };\r\n  const linesHandler = (val) => {\r\n    setLines(val);\r\n  };\r\n  const oilinessHandler = (val) => {\r\n    setOiliness(val);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id=\"container\"\r\n      style={{\r\n        width: '80%',\r\n        display: 'flex',\r\n        justifyContent: 'space-evenly',\r\n        margin: '1rem',\r\n        flexDirection: 'column',\r\n        flex: 0.6,\r\n      }}\r\n    >\r\n      <h2>Atualizar perfil de pele</h2>\r\n      <Form\r\n        onSubmit={(e) => onSubmitForm(e)}\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          flex: 0.5,\r\n        }}\r\n      >\r\n        <Form.Row>\r\n          <Col>\r\n            <Form.Label>Cor da Pele</Form.Label>\r\n            <Form.Group controlId=\"formGridColor\">\r\n              <Col>\r\n                <Row>\r\n                  {skinTypes.skin_color ? (\r\n                    <DynamicSelect\r\n                      aria-required=\"true\"\r\n                      required\r\n                      data={skinTypes.skin_color}\r\n                      default={initialColor}\r\n                      handleSelect={colorHandler}\r\n                    ></DynamicSelect>\r\n                  ) : (\r\n                    <Form.Control></Form.Control>\r\n                  )}\r\n                </Row>\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Label>Acne</Form.Label>\r\n            <Form.Group controlId=\"formGridAcne\">\r\n              <Col>\r\n                <Row>\r\n                  {skinTypes.skin_acne ? (\r\n                    <DynamicSelect\r\n                      aria-required=\"true\"\r\n                      required\r\n                      data={skinTypes.skin_acne}\r\n                      default={initialAcne}\r\n                      handleSelect={acneHandler}\r\n                    ></DynamicSelect>\r\n                  ) : (\r\n                    <Form.Control></Form.Control>\r\n                  )}\r\n                </Row>\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Label>Linhas da pele</Form.Label>\r\n            <Form.Group controlId=\"formGridLines\">\r\n              <Col>\r\n                <Row>\r\n                  {skinTypes.skin_lines ? (\r\n                    <DynamicSelect\r\n                      aria-required=\"true\"\r\n                      required\r\n                      data={skinTypes.skin_lines}\r\n                      default={initiaLines}\r\n                      handleSelect={linesHandler}\r\n                    ></DynamicSelect>\r\n                  ) : (\r\n                    <Form.Control></Form.Control>\r\n                  )}\r\n                </Row>\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Label>Oleosidade</Form.Label>\r\n            <Form.Group controlId=\"formGridOiliness\">\r\n              <Col>\r\n                <Row>\r\n                  {skinTypes.skin_oiliness ? (\r\n                    <DynamicSelect\r\n                      aria-required=\"true\"\r\n                      required\r\n                      data={skinTypes.skin_oiliness}\r\n                      default={initialOiliness}\r\n                      handleSelect={oilinessHandler}\r\n                    ></DynamicSelect>\r\n                  ) : (\r\n                    <Form.Control></Form.Control>\r\n                  )}\r\n                </Row>\r\n              </Col>\r\n            </Form.Group>\r\n          </Col>\r\n        </Form.Row>\r\n        <Row style={{ display: 'flex', flexDirection: 'row', flex: 0.2, justifyContent: 'center' }}>\r\n          {loading ? (\r\n            <Spinner animation=\"border\" variant=\"primary\" />\r\n          ) : (\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Atualizar Perfil\r\n            </Button>\r\n          )}\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\services\\app.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\common\\DynamicSelect.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\RatingPage.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\MainPage.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\product\\RateProduct.js",["124"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport ReactStars from 'react-rating-stars-component';\r\n\r\nimport * as ratingService from '../../services/rating.js';\r\nimport { useUser } from '../../context/UserContext.js';\r\n\r\nconst RateProduct = (props) => {\r\n  const [rating, setRating] = useState(5);\r\n\r\n  const { jwt } = useUser();\r\n\r\n  useEffect(() => {\r\n    if (!props.product_id) {\r\n      document.location = '/';\r\n    }\r\n  }, []);\r\n\r\n  const rateProduct = () => {\r\n    console.log(rating);\r\n    ratingService.evalProductService(jwt, parseInt(props.product_id), rating);\r\n  };\r\n\r\n  const ratingChanged = (newRating) => {\r\n    setRating(newRating);\r\n  };\r\n  if (props.product_id) {\r\n    return (\r\n      <Card\r\n        style={{\r\n          width: '18rem',\r\n          margin: '0.2rem',\r\n          border: 'solid 1px #CCC',\r\n        }}\r\n        ref={props.prodRef}\r\n      >\r\n        <a href={props.img_ref} target=\"_blank\" rel=\"noreferrer\">\r\n          <Card.Img variant=\"top\" src={props.img} />\r\n        </a>\r\n        <Card.Body\r\n          style={{ display: 'flex', flex: 1, flexDirection: 'column', justifyContent: 'flex-end' }}\r\n        >\r\n          <Card.Title>{props.name}</Card.Title>\r\n          <Card.Text>\r\n            <span>\r\n              <strong>{props.maker}</strong>\r\n            </span>\r\n            <br />\r\n            <span>R${props.price}</span>\r\n          </Card.Text>\r\n          <Col\r\n            style={{\r\n              diplay: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              alignContent: 'center',\r\n            }}\r\n          >\r\n            <ReactStars\r\n              count={5}\r\n              onChange={ratingChanged}\r\n              size={51.5}\r\n              isHalf={true}\r\n              activeColor=\"#ffd700\"\r\n              value={rating}\r\n            />\r\n            <Button variant=\"primary\" onClick={rateProduct}>\r\n              Avaliar\r\n            </Button>\r\n          </Col>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n};\r\n\r\nexport default RateProduct;\r\n","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\services\\rating.js",[],{"ruleId":"125","severity":1,"message":"126","line":19,"column":19,"nodeType":"127","messageId":"128","endLine":19,"endColumn":28},{"ruleId":"125","severity":1,"message":"129","line":19,"column":30,"nodeType":"127","messageId":"128","endLine":19,"endColumn":42},{"ruleId":"130","severity":1,"message":"131","line":30,"column":6,"nodeType":"132","endLine":30,"endColumn":8,"suggestions":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"125","severity":1,"message":"138","line":20,"column":10,"nodeType":"127","messageId":"128","endLine":20,"endColumn":17},{"ruleId":"125","severity":1,"message":"126","line":20,"column":19,"nodeType":"127","messageId":"128","endLine":20,"endColumn":28},{"ruleId":"130","severity":1,"message":"139","line":34,"column":6,"nodeType":"132","endLine":34,"endColumn":8,"suggestions":"140"},{"ruleId":"130","severity":1,"message":"141","line":123,"column":6,"nodeType":"132","endLine":123,"endColumn":45,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":173,"column":9,"nodeType":"145","messageId":"146","endLine":173,"endColumn":19},{"ruleId":"125","severity":1,"message":"147","line":1,"column":38,"nodeType":"127","messageId":"128","endLine":1,"endColumn":47},{"ruleId":"125","severity":1,"message":"148","line":1,"column":49,"nodeType":"127","messageId":"128","endLine":1,"endColumn":57},{"ruleId":"130","severity":1,"message":"149","line":33,"column":5,"nodeType":"132","endLine":33,"endColumn":46,"suggestions":"150"},{"ruleId":"125","severity":1,"message":"151","line":16,"column":25,"nodeType":"127","messageId":"128","endLine":16,"endColumn":40},{"ruleId":"125","severity":1,"message":"152","line":18,"column":10,"nodeType":"127","messageId":"128","endLine":18,"endColumn":19},{"ruleId":"125","severity":1,"message":"153","line":18,"column":21,"nodeType":"127","messageId":"128","endLine":18,"endColumn":33},{"ruleId":"125","severity":1,"message":"154","line":19,"column":10,"nodeType":"127","messageId":"128","endLine":19,"endColumn":18},{"ruleId":"125","severity":1,"message":"155","line":19,"column":20,"nodeType":"127","messageId":"128","endLine":19,"endColumn":31},{"ruleId":"130","severity":1,"message":"156","line":30,"column":6,"nodeType":"132","endLine":30,"endColumn":15,"suggestions":"157"},{"ruleId":"130","severity":1,"message":"158","line":34,"column":6,"nodeType":"132","endLine":34,"endColumn":8,"suggestions":"159"},{"ruleId":"125","severity":1,"message":"160","line":41,"column":16,"nodeType":"127","messageId":"128","endLine":41,"endColumn":19},{"ruleId":"130","severity":1,"message":"161","line":21,"column":6,"nodeType":"132","endLine":21,"endColumn":8,"suggestions":"162"},"no-unused-vars","'setCookie' is assigned a value but never used.","Identifier","unusedVar","'removeCookie' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cookies.sid' and 'setJWT'. Either include them or remove the dependency array.","ArrayExpression",["163"],"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"'cookies' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getMakers'. Either include it or remove the dependency array.",["166"],"React Hook useEffect has a missing dependency: 'products'. Either include it or remove the dependency array.",["167"],"no-dupe-keys","Duplicate key 'categories'.","ObjectExpression","unexpected","'useEffect' is defined but never used.","'useState' is defined but never used.","React Hook useCallback has an unnecessary dependency: 'hasMore'. Either exclude it or remove the dependency array.",["168"],"'getSkinProfiles' is assigned a value but never used.","'firstname' is assigned a value but never used.","'setFirstname' is assigned a value but never used.","'lastname' is assigned a value but never used.","'setLastname' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'jwt'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setIsSignedIn' needs the current value of 'jwt'.",["169"],"React Hook useEffect has a missing dependency: 'getUserProfile'. Either include it or remove the dependency array.",["170"],"'key' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.product_id'. Either include it or remove the dependency array.",["171"],{"desc":"172","fix":"173"},"no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},"Update the dependencies array to be: [cookies.sid, setJWT]",{"range":"186","text":"187"},"Update the dependencies array to be: [getMakers]",{"range":"188","text":"189"},"Update the dependencies array to be: [userInput, page, maker, category, jwt, products]",{"range":"190","text":"191"},"Update the dependencies array to be: [page, setPage, loadingProducts]",{"range":"192","text":"193"},"Update the dependencies array to be: [cookies, jwt]",{"range":"194","text":"195"},"Update the dependencies array to be: [getUserProfile]",{"range":"196","text":"197"},"Update the dependencies array to be: [props.product_id]",{"range":"198","text":"199"},[833,835],"[cookies.sid, setJWT]",[1058,1060],"[getMakers]",[3585,3624],"[userInput, page, maker, category, jwt, products]",[950,991],"[page, setPage, loadingProducts]",[1005,1014],"[cookies, jwt]",[1242,1244],"[getUserProfile]",[569,571],"[props.product_id]"]