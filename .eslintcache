[{"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\index.js":"1","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\App.js":"2","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\reportWebVitals.js":"3","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\routes\\Routes.js":"4","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\LoginPage.js":"5","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\routes\\AuthRoutes.js":"6","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\services\\auth.js":"7","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\base\\Header.js":"8","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\context\\AppContext.js":"9","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\services\\products.js":"10","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\WelcomePage.js":"11","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\product\\ProductList.js":"12","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\product\\ProductCard.js":"13","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\RegistrationPage.js":"14","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\config\\endpoints.js":"15","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\context\\UserContext.js":"16","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\services\\user.js":"17","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\routes\\PrivateRoutes.js":"18","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\ProfilePage.js":"19","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\services\\app.js":"20","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\common\\DynamicSelect.js":"21"},{"size":697,"mtime":1612446668525,"results":"22","hashOfConfig":"23"},{"size":1147,"mtime":1612824451176,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1612210698121,"results":"25","hashOfConfig":"23"},{"size":980,"mtime":1612529833417,"results":"26","hashOfConfig":"23"},{"size":2108,"mtime":1612638468643,"results":"27","hashOfConfig":"23"},{"size":468,"mtime":1612445232844,"results":"28","hashOfConfig":"23"},{"size":2222,"mtime":1612824382091,"results":"29","hashOfConfig":"23"},{"size":3148,"mtime":1612824527682,"results":"30","hashOfConfig":"23"},{"size":5204,"mtime":1612823445644,"results":"31","hashOfConfig":"23"},{"size":3045,"mtime":1612438313693,"results":"32","hashOfConfig":"23"},{"size":346,"mtime":1612309784914,"results":"33","hashOfConfig":"23"},{"size":2185,"mtime":1612793733628,"results":"34","hashOfConfig":"23"},{"size":1503,"mtime":1612786892133,"results":"35","hashOfConfig":"23"},{"size":6722,"mtime":1612806732416,"results":"36","hashOfConfig":"23"},{"size":1084,"mtime":1612308282189,"results":"37","hashOfConfig":"23"},{"size":2624,"mtime":1612824394225,"results":"38","hashOfConfig":"23"},{"size":1694,"mtime":1612531865618,"results":"39","hashOfConfig":"23"},{"size":510,"mtime":1612656691616,"results":"40","hashOfConfig":"23"},{"size":5907,"mtime":1612533130640,"results":"41","hashOfConfig":"23"},{"size":4430,"mtime":1612792540829,"results":"42","hashOfConfig":"23"},{"size":1379,"mtime":1612823320062,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"cwkrlr",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\index.js",[],["89","90"],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\App.js",["91"],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\reportWebVitals.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\routes\\Routes.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\LoginPage.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\routes\\AuthRoutes.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\services\\auth.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\base\\Header.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\context\\AppContext.js",["92","93","94"],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\services\\products.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\WelcomePage.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\product\\ProductList.js",["95","96","97"],"import React, { useCallback, useRef, useEffect, useState } from 'react';\r\n\r\nimport ProductCard from './ProductCard';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nimport { useApp } from '../../context/AppContext.js';\r\n\r\nconst ProductList = (props) => {\r\n  const { products, loadingProducts, setPage, page, hasMore } = useApp();\r\n\r\n  const observer = useRef();\r\n  const lastProductRef = useCallback(\r\n    (node) => {\r\n      if (loadingProducts) {\r\n        console.log('IS LOADING');\r\n        return;\r\n      }\r\n      if (observer.current) {\r\n        observer.current.disconnect();\r\n      }\r\n      observer.current = new IntersectionObserver((entries) => {\r\n        if (entries[0].isIntersecting) {\r\n          console.log('VISIBLE');\r\n          setPage(page + 1);\r\n        }\r\n      });\r\n      if (node) {\r\n        observer.current.observe(node);\r\n      }\r\n    },\r\n    [page, setPage, hasMore, loadingProducts]\r\n  );\r\n\r\n  const renderCard = (card, index) => {\r\n    if (card.id) {\r\n      if (!loadingProducts) {\r\n        if (products.length === index + 1 && hasMore) {\r\n          return (\r\n            <ProductCard\r\n              prodRef={lastProductRef}\r\n              key={card.id}\r\n              img={card.img_src}\r\n              name={card.name}\r\n              maker={card.maker}\r\n              price={card.price}\r\n              img_ref={card.ref}\r\n            />\r\n          );\r\n        } else {\r\n          return (\r\n            <ProductCard\r\n              key={card.id}\r\n              img={card.img_src}\r\n              name={card.name}\r\n              maker={card.maker}\r\n              price={card.price}\r\n              img_ref={card.ref}\r\n            />\r\n          );\r\n        }\r\n      } else {\r\n        return (\r\n          <ProductCard\r\n            key={card.id}\r\n            img={card.img_src}\r\n            name={card.name}\r\n            maker={card.maker}\r\n            price={card.price}\r\n            img_ref={card.ref}\r\n            isSpinner={true}\r\n          />\r\n        );\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <Col style={{ padding: '7%' }}>\r\n      <Row>{products.map(renderCard)}</Row>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\product\\ProductCard.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\RegistrationPage.js",["98","99","100","101","102"],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\config\\endpoints.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\context\\UserContext.js",["103"],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\services\\user.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\routes\\PrivateRoutes.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\pages\\ProfilePage.js",["104","105"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nimport DynamicSelect from '../components/common/DynamicSelect.js';\r\nimport { useApp } from '../context/AppContext.js';\r\nimport { useUser } from '../context/UserContext.js';\r\n\r\nconst ProfilePage = (props) => {\r\n  const { skinProfiles } = useApp();\r\n  const { getUserProfile, profile, setUserProfile } = useUser();\r\n\r\n  const [initialColor, setInitialColor] = useState('');\r\n  const [initialAcne, setInitialAcne] = useState('');\r\n  const [initiaLines, setInitialLines] = useState('');\r\n  const [initialOiliness, setInitialOiliness] = useState('');\r\n  const [color, setColor] = useState('');\r\n  const [acne, setAcne] = useState('');\r\n  const [lines, setLines] = useState('');\r\n  const [oiliness, setOiliness] = useState('');\r\n  const [skinTypes, setSkinTypes] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const setTypes = async () => {\r\n      await getUserProfile();\r\n      setLoading(false);\r\n    };\r\n    setTypes();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSkinTypes(skinProfiles);\r\n  }, [skinProfiles]);\r\n\r\n  useEffect(() => {\r\n    for (const key in profile) {\r\n      setInitialColor(profile.skin_color_id);\r\n      setInitialOiliness(profile.skin_oiliness_id);\r\n      setInitialLines(profile.skin_lines_id);\r\n      setInitialAcne(profile.skin_acne_id);\r\n      setColor(profile.skin_color_id);\r\n      setOiliness(profile.skin_oiliness_id);\r\n      setLines(profile.skin_lines_id);\r\n      setAcne(profile.skin_acne_id);\r\n    }\r\n  }, [profile]);\r\n\r\n  const onSubmitForm = async (e) => {\r\n    e.preventDefault();\r\n    const resp = await setUserProfile({\r\n      skin_color: color,\r\n      skin_acne: acne,\r\n      skin_oiliness: oiliness,\r\n      skin_lines: lines,\r\n    });\r\n    if (resp) {\r\n      props.history.push('/');\r\n    }\r\n  };\r\n\r\n  const colorHandler = (val) => {\r\n    setColor(val);\r\n  };\r\n  const acneHandler = (val) => {\r\n    setAcne(val);\r\n  };\r\n  const linesHandler = (val) => {\r\n    setLines(val);\r\n  };\r\n  const oilinessHandler = (val) => {\r\n    setOiliness(val);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id=\"container\"\r\n      style={{\r\n        width: '80%',\r\n        display: 'flex',\r\n        justifyContent: 'space-evenly',\r\n        margin: '1rem',\r\n        flexDirection: 'column',\r\n        flex: 0.6,\r\n      }}\r\n    >\r\n      <h2>Atualizar perfil de pele</h2>\r\n      <Form\r\n        onSubmit={(e) => onSubmitForm(e)}\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          flex: 0.5,\r\n        }}\r\n      >\r\n        <Form.Row>\r\n          <Col>\r\n            <Form.Label>Cor da Pele</Form.Label>\r\n            <Form.Group controlId=\"formGridColor\">\r\n              <Col>\r\n                <Row>\r\n                  {skinTypes.skin_color ? (\r\n                    <DynamicSelect\r\n                      aria-required=\"true\"\r\n                      required\r\n                      data={skinTypes.skin_color}\r\n                      default={initialColor}\r\n                      handleSelect={colorHandler}\r\n                    ></DynamicSelect>\r\n                  ) : (\r\n                    <Form.Control></Form.Control>\r\n                  )}\r\n                </Row>\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Label>Acne</Form.Label>\r\n            <Form.Group controlId=\"formGridAcne\">\r\n              <Col>\r\n                <Row>\r\n                  {skinTypes.skin_acne ? (\r\n                    <DynamicSelect\r\n                      aria-required=\"true\"\r\n                      required\r\n                      data={skinTypes.skin_acne}\r\n                      default={initialAcne}\r\n                      handleSelect={acneHandler}\r\n                    ></DynamicSelect>\r\n                  ) : (\r\n                    <Form.Control></Form.Control>\r\n                  )}\r\n                </Row>\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Label>Linhas da pele</Form.Label>\r\n            <Form.Group controlId=\"formGridLines\">\r\n              <Col>\r\n                <Row>\r\n                  {skinTypes.skin_lines ? (\r\n                    <DynamicSelect\r\n                      aria-required=\"true\"\r\n                      required\r\n                      data={skinTypes.skin_lines}\r\n                      default={initiaLines}\r\n                      handleSelect={linesHandler}\r\n                    ></DynamicSelect>\r\n                  ) : (\r\n                    <Form.Control></Form.Control>\r\n                  )}\r\n                </Row>\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Label>Oleosidade</Form.Label>\r\n            <Form.Group controlId=\"formGridOiliness\">\r\n              <Col>\r\n                <Row>\r\n                  {skinTypes.skin_oiliness ? (\r\n                    <DynamicSelect\r\n                      aria-required=\"true\"\r\n                      required\r\n                      data={skinTypes.skin_oiliness}\r\n                      default={initialOiliness}\r\n                      handleSelect={oilinessHandler}\r\n                    ></DynamicSelect>\r\n                  ) : (\r\n                    <Form.Control></Form.Control>\r\n                  )}\r\n                </Row>\r\n              </Col>\r\n            </Form.Group>\r\n          </Col>\r\n        </Form.Row>\r\n        <Row style={{ display: 'flex', flexDirection: 'row', flex: 0.2, justifyContent: 'center' }}>\r\n          {loading ? (\r\n            <Spinner animation=\"border\" variant=\"primary\" />\r\n          ) : (\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Atualizar Perfil\r\n            </Button>\r\n          )}\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\services\\app.js",[],"C:\\Workspace\\Projects\\makeupyourmind-frontend\\src\\components\\common\\DynamicSelect.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":20,"column":6,"nodeType":"112","endLine":20,"endColumn":11,"suggestions":"113"},{"ruleId":"110","severity":1,"message":"114","line":35,"column":6,"nodeType":"112","endLine":35,"endColumn":8,"suggestions":"115"},{"ruleId":"110","severity":1,"message":"116","line":121,"column":6,"nodeType":"112","endLine":121,"endColumn":45,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":181,"column":9,"nodeType":"120","messageId":"121","endLine":181,"endColumn":19},{"ruleId":"122","severity":1,"message":"123","line":1,"column":38,"nodeType":"124","messageId":"125","endLine":1,"endColumn":47},{"ruleId":"122","severity":1,"message":"126","line":1,"column":49,"nodeType":"124","messageId":"125","endLine":1,"endColumn":57},{"ruleId":"110","severity":1,"message":"127","line":32,"column":5,"nodeType":"112","endLine":32,"endColumn":46,"suggestions":"128"},{"ruleId":"122","severity":1,"message":"129","line":16,"column":25,"nodeType":"124","messageId":"125","endLine":16,"endColumn":40},{"ruleId":"122","severity":1,"message":"130","line":18,"column":10,"nodeType":"124","messageId":"125","endLine":18,"endColumn":19},{"ruleId":"122","severity":1,"message":"131","line":18,"column":21,"nodeType":"124","messageId":"125","endLine":18,"endColumn":33},{"ruleId":"122","severity":1,"message":"132","line":19,"column":10,"nodeType":"124","messageId":"125","endLine":19,"endColumn":18},{"ruleId":"122","severity":1,"message":"133","line":19,"column":20,"nodeType":"124","messageId":"125","endLine":19,"endColumn":31},{"ruleId":"110","severity":1,"message":"134","line":26,"column":6,"nodeType":"112","endLine":26,"endColumn":8,"suggestions":"135"},{"ruleId":"110","severity":1,"message":"136","line":34,"column":6,"nodeType":"112","endLine":34,"endColumn":8,"suggestions":"137"},{"ruleId":"122","severity":1,"message":"138","line":41,"column":16,"nodeType":"124","messageId":"125","endLine":41,"endColumn":19},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loading'. Either include it or remove the dependency array.","ArrayExpression",["141"],"React Hook useEffect has a missing dependency: 'getMakers'. Either include it or remove the dependency array.",["142"],"React Hook useEffect has a missing dependency: 'products'. Either include it or remove the dependency array.",["143"],"no-dupe-keys","Duplicate key 'categories'.","ObjectExpression","unexpected","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","React Hook useCallback has an unnecessary dependency: 'hasMore'. Either exclude it or remove the dependency array.",["144"],"'getSkinProfiles' is assigned a value but never used.","'firstname' is assigned a value but never used.","'setFirstname' is assigned a value but never used.","'lastname' is assigned a value but never used.","'setLastname' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'jwt'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setIsSignedIn' needs the current value of 'jwt'.",["145"],"React Hook useEffect has a missing dependency: 'getUserProfile'. Either include it or remove the dependency array.",["146"],"'key' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},"Update the dependencies array to be: [jwt, loading]",{"range":"159","text":"160"},"Update the dependencies array to be: [getMakers]",{"range":"161","text":"162"},"Update the dependencies array to be: [userInput, page, maker, category, jwt, products]",{"range":"163","text":"164"},"Update the dependencies array to be: [page, setPage, loadingProducts]",{"range":"165","text":"166"},"Update the dependencies array to be: [jwt]",{"range":"167","text":"168"},"Update the dependencies array to be: [getUserProfile]",{"range":"169","text":"170"},[581,586],"[jwt, loading]",[1118,1120],"[getMakers]",[3494,3533],"[userInput, page, maker, category, jwt, products]",[902,943],"[page, setPage, loadingProducts]",[858,860],"[jwt]",[1242,1244],"[getUserProfile]"]